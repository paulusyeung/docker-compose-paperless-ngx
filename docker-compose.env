# The UID and GID of the user used to run paperless in the container. Set this
# to your UID and GID on the host so that you have write access to the
# consumption directory. To check your PUID and PGID values on Linux,
# you can use a terminal. Enter the command
# id username (replacing username with your own username on the computer).
# The result of this command will show your PUID (UID) and PGID (GID).
USERMAP_UID=1000
USERMAP_GID=1000

# Additional languages to install for text recognition, separated by a
# whitespace. Note that this is
# different from PAPERLESS_OCR_LANGUAGE (default=eng), which defines the
# language used for OCR.
# The container installs English, German, Italian, Spanish and French by
# default.
# See https://packages.debian.org/search?keywords=tesseract-ocr-&searchon=names&suite=buster
# for available languages.
PAPERLESS_OCR_LANGUAGES=eng chi-tra chi-tra-vert chi-sim

###############################################################################
# Paperless-specific settings                                                 #
###############################################################################

# All settings defined in the paperless.conf.example can be used here. The
# Docker setup does not use the configuration file.
# A few commonly adjusted settings are provided below.

# This is required if you will be exposing Paperless-ngx on a public domain
# (if doing so please consider security measures such as reverse proxy)
PAPERLESS_URL=https://paperless.example.com

# Adjust this key if you plan to make paperless available publicly. It should
# be a very long sequence of random characters. You don't need to remember it.
#PAPERLESS_SECRET_KEY=change-me

# Use this variable to set a timezone for the Paperless Docker containers. If not specified, defaults to UTC.
PAPERLESS_TIME_ZONE=Asia/Hong_Kong

# The default language to use for OCR. Set this to the language most of your
# documents are written in.
PAPERLESS_OCR_LANGUAGE=eng+chi_tra+chi_sim

# Set if accessing paperless via a domain subpath e.g. https://domain.com/PATHPREFIX and using a reverse-proxy like traefik or nginx
#PAPERLESS_FORCE_SCRIPT_NAME=/PATHPREFIX
#PAPERLESS_STATIC_URL=/PATHPREFIX/static/ # trailing slash required

# instead of running inside the container: python manage.py createsuperuser, or sudo docker compose run --rm webserver createsuperuser
PAPERLESS_ADMIN_USER=<admin_user>
PAPERLESS_ADMIN_PASSWORD=<admin_password>
PAPERLESS_ADMIN_MAIL=<admin_email>

# File name handling
# By default, paperless stores your documents in the media directory and renames them using the identifier which it has assigned to each document.
# This variable allows you to configure the filename (folders are allowed) using placeholders. For example:
# 2019/
#   My bank/
#     Statement Jan.pdf
#     Statement Feb.pdf
PAPERLESS_FILENAME_FORMAT={{ created_year }}/{{ correspondent }}/{{ title }}

# eMail settings for password reset
# https://docs.paperless-ngx.com/configuration/#email-sending
# PAPERLESS_EMAIL_HOST=<str>
# PAPERLESS_EMAIL_PORT=<int>
# PAPERLESS_EMAIL_HOST_USER=<str>
# PAPERLESS_EMAIL_HOST_PASSWORD=<str>
# PAPERLESS_EMAIL_USE_TLS=<bool>
# PAPERLESS_EMAIL_USE_SSL=<bool>

# Sometimes you may want to do something arbitrary whenever a document is consumed.
# Rather than try to predict what you may want to do, Paperless lets you execute scripts
# of your own choosing just before or after a document is consumed using a couple of simple hooks.
#
# Just write a script, put it somewhere that Paperless can read & execute,
# and then put the path to that script in paperless.conf or docker-compose.env with the
# variable name of either or
PAPERLESS_PRE_CONSUME_SCRIPT=<str>
PAPERLESS_POST_CONSUME_SCRIPT=<str>

# Recursive consuming
# Enable recursive watching of the consumption directory.
# Paperless will then pickup files from files in subdirectories within your consumption directory as well.
# Defaults to false.
PAPERLESS_CONSUMER_RECURSIVE=true
# PAPERLESS_CONSUMER_DELETE_DUPLICATES=<bool>
# PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS=<bool>
# PAPERLESS_CONSUMER_IGNORE_PATTERNS=<json>

# If paperless won't find documents added to your consume folder,
# it might not be able to automatically detect filesystem changes.
# In that case, specify a polling interval in seconds here,
# which will then cause paperless to periodically check your consumption directory for changes.
# This will also disable listening for file system changes with inotify.
PAPERLESS_CONSUMER_POLLING=10
PAPERLESS_CONSUMER_POLLING_RETRY_COUNT=4
PAPERLESS_CONSUMER_POLLING_DELAY=10
